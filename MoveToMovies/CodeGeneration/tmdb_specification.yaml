openapi: 3.0.0

info:
  title: API client for https://www.themoviedb.org
  description: Developed as part of the 'Move to Movies' educational project on the "iOS Developer professional" course on the educational platform [Otus](https://otus.ru)
  version: 0.0.21
  contact:
    name: Dmitry Samartcev
    url: https://github.com/vegiwoo
    email: vegiwoo@protonmail.com

servers:
  - url: https://api.themoviedb.org/3
    description: Server main address.

components:
  schemas:

    Genre:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    ProductionCompany:
      type: object
      properties:
        name:
          type: string
        id: 
          type: integer
        logo_path: 
          type: string
          nullable: true
        origin_country:
          type: string

    ProductionCountry:
      type: object
      properties:
        iso_3166_1:
          type: string
        name:
          type: string

    SpokenLanguage:
      type: object
      properties:
        iso_639_1:
          type: string
        name: 
          type: string

    # Collection:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #     name:
    #       type: string
    #     poster_path:
    #       type: string
    #       nullable: true
    #     backdrop_path:
    #       type: string

    # Collection:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #     name:
    #       type: string
    #     overview:
    #       type: string
    #     poster_path:
    #       type: string
    #       nullable: true
    #     backdrop_path:
    #       type: string
    #     parts:
    #       type: array
    #       items:  
    #         $ref: '#/components/schemas/MovieListResultObject'

    Movie:
      type: object
      properties:
        adult:
          type: boolean
        backdrop_path:
          type: string
          nullable: true
        belongs_to_collection:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            poster_path:
              type: string
            backdrop_path:
              type: string
          nullable: true
        budget: 
          type: integer
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        homepage:
          type: string
          nullable: true
        id:
          type: integer
        imdb_id:
          type: string
          nullable: true
          minLength: 9
          maxLength: 9
          pattern: '^tt[0-9]{7}$'
        original_language:
          type: string
        original_title:
          type: string
        overview: 
          type: string
          nullable: true
        popularity:
          type: number
        poster_path:
          type: string
          nullable: true
        production_companies:
          type: array
          items:  
            $ref: '#/components/schemas/ProductionCompany'
        production_countries:
          type: array
          items:
            $ref: '#/components/schemas/ProductionCountry'     
        release_date:
          type: string
        revenue:
          type: integer
        runtime:
          type: integer
          nullable: true
        spoken_languages:
          type: array
          items:
            $ref: '#/components/schemas/SpokenLanguage'     
        status:
          type: string
          enum: 
            - Rumored
            - Planned
            - In Production
            - Post Production
            - Released
            - Canceled
        tagline:
          type: string
          nullable: true
        title: 
          type: string
        video:
          type: boolean
        vote_average:
          type: number
        vote_count: 
          type: integer

    MovieListResultObject: 
      type: object
      properties:
        poster_path:
          type: string
          nullable: true        
        adult:
          type: boolean
        overview: 
          type: string
        release_date:
          type: string
        gerne_ids:
          type: array
          items: 
            type: integer
        id:
          type: integer
        original_title:
          type: string
        original_language:
          type: string
        title: 
          type: string
        backdrop_path:
          type: string
          nullable: true
        popularity:
          type: number
        vote_count: 
          type: integer
        video:
          type: boolean
        vote_average:
          type: number
paths:
  /movie/popular:
    get:
      summary: Get a list of the current popular movies on TMDb. This list updates daily.
      parameters:
        - in: query
          name: api_key
          required: true
          description: API key for using the service.
          schema:
            type : string
      responses: 
        '200':
          description: Movie list result object
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MovieListResultObject'
                  total_results:
                    type: integer
                  total_pages: 
                    type: integer
  /genre/movie/list:
    get:
      summary: Get the list of official genres for movies.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type : string
          description: API key for using the service.
      responses:
        '200':
          description: Gerne list result object
          content:
            application/json:
              schema:
                type: object
                properties:
                  genres: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Genre'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_message:
                    type: string
                  status_code: 
                    type: integer
        '404':  
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_message:
                    type: string
                  status_code: 
                    type: integer
  /movie/{movie_id}:
    get:
      summary: Get the primary information about a movie.
      parameters:
        - in: path
          name: movie_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The movie ID.
        - in: query
          name: api_key
          required: true
          schema:
            type : string
          description: API key for using the service.

      responses:
        '200':
          description: Primary information about a movie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_message:
                    type: string
                  status_code: 
                    type: integer
        '404':  
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_message:
                    type: string
                  status_code: 
                    type: integer
                    
  # /t/p/{image_size}/{poster_path}:
  #   get:
  #     summary: Get a movie poster.
  #     servers:
  #       - url: https://image.tmdb.org
  #         description: Server address for storing images.
  #     parameters:
  #       - in: path
  #         name: image_size
  #         required: true
  #         schema:
  #           type: string
  #           enum: [w92, w154, w185, w342, w500, w780, original]
  #         description: Specifies width of poster in pixels.
  #       - in: path
  #         name: poster_path
  #         required: true
  #         schema:
  #           type: string
  #         description: Specifies path of poster
  #     responses:
  #       '200':
  #         description: Date object containing poster.
  #         content:
  #           image/png:
  #             schema:
  #               type: string
  #               format: binary
